/**
 * A text-based UI for displaying messages and the simulation grid, and for obtaining user input.
 * 
 * At some stage we might want to replace this UI with a GUI.
 * 
 * @author ram
 */
/*
 * Change log
 * 2017-01-21: Extensions to the Javadoc and added comments (asel)
 */
package hobbit;


import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

import edu.monash.fit2024.simulator.userInterface.MapRenderer;
import edu.monash.fit2024.simulator.userInterface.MessageRenderer;
import edu.monash.fit2024.simulator.userInterface.SimulationController;

public class TextInterface implements MessageRenderer, MapRenderer, SimulationController {
	private HobbitGrid grid;

	/**
	 * Constructor.
	 */
	public TextInterface(MiddleEarth world) {
		grid = world.getGrid();
	}

	/**
	 * Display the simulation banner.
	 * 
	 * Based on code from the original Eiffel version of this program, and originally 
	 * generated by the UNIX program figlet.
	 * 
	 * @author ram
	 */
	public static void showBanner() {
		System.out.println(" _______ _            _    _       _     _     _ _   ");
		System.out.println("|__   __| |          | |  | |     | |   | |   (_) |  ");
		System.out.println("   | |  | |__   ___  | |__| | ___ | |__ | |__  _| |_ ");
		System.out.println("   | |  |  _ \\ / _ \\ |  __  |/ _ \\|  _ \\|  _ \\| | __|");
		System.out.println("   | |  | | | |  __/ | |  | | (_) | |_) | |_) | | |_ ");
		System.out.println("   |_|  |_| |_|\\___| |_|  |_|\\___/|_.__/|_.__/|_|\\__|\n\n");
	}
	

	@Override
	/**
	 * Render the grid.  Part of the MapRenderer interface.
	 * 
	 * @author ram
	 */
	public void render() {
		grid.render(MiddleEarth.getEntitymanager());
	}

	@Override
	/**
	 * Display a message.  Part of the MessageRenderer interface.
	 * 
	 * @author ram
	 * @param message the String to display
	 */
	public void render(String message) {
		System.out.println(message);

	}

	/**
	 * Display a menu and receive user input.
	 * 
	 * @param a the HobbitActor to display options for
	 * @return the HobbitActionInterface that the player has chosen to perform.
	 */
	public static HobbitActionInterface getUserDecision(HobbitActor a) {
		Scanner instream = new Scanner(System.in);
		ArrayList<HobbitActionInterface> cmds = new ArrayList<HobbitActionInterface>();

		//for all the actions of the Hobbit actor
		for (HobbitActionInterface ac : MiddleEarth.getEntitymanager().getActionsFor(a)) {
			if (ac.canDo(a))
				cmds.add(ac);//add the ones the Hobbit Actor can do
		}
		
		Collections.sort(cmds);//sorting the actions for a prettier output

		//construct the commands to be displayed on screen
		for (int i = 0; i < cmds.size(); i++) {
			System.out.println(i + 1 + " " + cmds.get(i).getDescription());
		}

		
		int selection = 0;
		while (selection < 1 || selection > cmds.size()) {//loop until a command in the valid range has been obtained
			System.out.println("Enter command:");
			selection = (instream.nextInt());
		}

	
		return cmds.get(selection-1);//return the action selected
	}
}
